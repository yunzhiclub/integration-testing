name: GitHub Actions
run-name: integration-testing

on:
  pull_request:
    branches: [ main ]

jobs:
  unit-test:
    runs-on: ubuntu-latest

    # 定义任务的步骤
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.16.0

      - name: angular-test
        run: |
          pwd
          cd web
          env
          pwd
          npm install
          npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
          npm run build

  spring-boot-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: build mysql
        run: |
          docker pull mysql:5.7
          docker run -p 3312:3306 -e MYSQL_ROOT_PASSWORD=yunzhi -e MYSQL_DATABASE=integrationTesting -d mysql:5.7 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

      - name: Set up JDK17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: springboot-test
        run: |
          pwd
          cd api
          env
          pwd
          mvn install
          mvn -v
          mvn test
          mvn --batch-mode package

  angular-build: 
    runs-on: self-hosted
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.16.0
      - name: angular-build
        run: |
         cd web
         env
         npm install --no-audit
         npm run build
         mv dist/* ../dist
  
  # spring-boot-build:
  #   runs-on: self-hosted
  #   needs: [ unit-test, spring-boot-test ]

  #   steps: 
  #     - name: Checkout repository
  #       uses: actions/checkout@v4 
      
  #     - name: Set up JDK17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #         cache: maven
  #     - name: spring-boot-build
  #       run: |
  #         cd api
  #         env
  #         node -v 
  #         npm -v
  #         mvn -v
  #         mvn package -Dmaven.test.skip=true
  #         mv target/*.jar ../app.jar
        
  # dingding-error:
  #   runs-on: ubuntu-latest
  #   needs: [ unit-test, spring-boot-test ]
  #   if: ${{ failure() }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Send dingding notify error
  #       uses: zcong1993/actions-ding@master
  #       with:
  #         dingToken: bef0c36558d1788bca4364a9b19c8bf72a6e8c72365e22fe1ce9656b34b1a2ca
  #         body: |
  #           {
  #             "msgtype": "text",
  #             "text": {
  #                 "content": '[打叉][打叉][打叉]  执行失败\n提交者: ${{ github.triggering_actor }}\n任务: ${{ github.event.pull_request.title }}\n${{ github.ref_type }}: ${{ github.head_ref }}\n${{ github.event_name }}: ${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.number }}'
  #             }
  #           }
     

  # dingding-success:
  #   runs-on: ubuntu-latest
  #   needs: [ unit-test, spring-boot-test ]
  #   if: ${{ success() }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Send dingding notify success
  #       uses: zcong1993/actions-ding@master
  #       with:
  #         dingToken: bef0c36558d1788bca4364a9b19c8bf72a6e8c72365e22fe1ce9656b34b1a2ca
  #         body: |
  #           {
  #            "msgtype": "text",
  #            "text": {
  #                "content": '[微笑][微笑][微笑]  执行成功\n提交者: ${{ github.triggering_actor }}\n任务: ${{ github.event.pull_request.title }}\n${{ github.ref_type }}: ${{ github.head_ref }}\n${{ github.event_name }}: ${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.number }}'
  #            }
  #           }
